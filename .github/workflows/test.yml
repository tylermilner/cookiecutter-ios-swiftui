name: Test

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - '**'  # Run on all branches
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  # Match path used in `make generate` command
  TEMPLATE_OUTPUT_DIR: my-app
  # Match name used in deploy.yml download artifact step
  TEMPLATE_OUTPUT_ARTIFACT_NAME: template-output

permissions:
  contents: read

concurrency:
  # Cancel any in-progress runs for this workflow/branch combination
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4

      - name: Install XcodeGen
        run: brew install xcodegen

      - name: Set up Python, including cache for pipenv virtual environment
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
          cache: pipenv

      - name: Install pipenv
        run: |
          pip install --upgrade pip
          pip install pipenv

      - name: Install project dependencies
        run: pipenv install --dev

      - name: Run mypy
        run: pipenv run mypy .

      - name: Check Format
        run: pipenv run ruff format

      - name: Lint
        run: pipenv run ruff check

      - name: Run tests
        run: pipenv run pytest

      - name: Generate template from defaults
        run: make generate

      - name: List generated files
        run: ls -la ${{ env.TEMPLATE_OUTPUT_DIR}}

      # yamllint disable rule:line-length
      # Tar files before upload to preserve file permissions
      - name: Tar files
        run: tar -czvf ${{ env.TEMPLATE_OUTPUT_ARTIFACT_NAME}}.tar.gz ${{ env.TEMPLATE_OUTPUT_DIR}}
      # yamllint enable rule:line-length

      - name: Upload generated template
        uses: actions/upload-artifact@v4
        id: upload-generated-template
        with:
          name: ${{ env.TEMPLATE_OUTPUT_ARTIFACT_NAME }}
          path: ${{ env.TEMPLATE_OUTPUT_ARTIFACT_NAME}}.tar.gz

  test-generated-template:
    name: Test Generated Template
    runs-on: macos-15
    needs: test
    steps:
      - name: Download generated template
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.TEMPLATE_OUTPUT_ARTIFACT_NAME }}

      - name: List downloaded files
        run: ls -la

      # yamllint disable rule:line-length
      - name: Extract downloaded files
        run: tar -xzvf ${{ env.TEMPLATE_OUTPUT_ARTIFACT_NAME }}.tar.gz --strip-components=1
      # yamllint enable rule:line-length

      - name: List extracted files
        run: ls -la

      - name: Set Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.1.app

      - name: Set up ruby environment
        uses: ruby/setup-ruby@v1
        with:
          # Automatically runs `bundle install` and caches the result
          bundler-cache: true

      - name: Run tests
        run: ./run-tests.sh

      # Update the bundle id and development team so that a build can be created
      # (i.e. they need to map to a real values in the Apple Developer Portal)
      # yamllint disable rule:line-length
      - name: Update build values
        run: |
          bundle exec fastlane run update_app_identifier app_identifier:"com.tylermilner.myapp"
          bundle exec fastlane run update_project_team teamid:"3X9D9ZKDMN"
      # yamllint enable rule:line-length

      - name: Create build
        run: ./create-build.sh
        env:
          # yamllint disable rule:line-length
          BUILD_NUMBER: ${{ github.run_number }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          # yamllint enable rule:line-length
