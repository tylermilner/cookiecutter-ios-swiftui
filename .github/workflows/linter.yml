name: Lint

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read
  packages: read
  statuses: write

jobs:
  lint:
    name: Lint Codebase
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0

      - name: Set up Python, including cache for pipenv virtual environment
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
          cache: pipenv

      - name: Install pipenv
        run: |
          pip install --upgrade pip
          pip install pipenv

      - name: Install project dependencies
        run: pipenv install --deploy --dev

      - name: Get virtual environment path
        id: get-venv-path
        run: echo "venv-path=$(pipenv --venv)" >> "$GITHUB_OUTPUT"

      # Copy python dependencies to a location that the super-linter will be
      # able to access when running inside its Docker container
      # '/home/runner/work/_temp/_github_workflow' maps to '/github/workflow'
      # in the Docker container
      - name: Copy python dependencies
        run: cp -r "${{ steps.get-venv-path.outputs.venv-path }}" /home/runner/work/_temp/_github_workflow/.venv  # yamllint disable-line rule:line-length

      # Extract MAJOR.MINOR version from .python-version file to be used in
      # Python folder name when setting PYTHONPATH for super-linter
      - name: Get Python version from .python-version file
        id: get-python-version
        run: echo "python-version=$(cut -d '.' -f 1,2 .python-version)" >> "$GITHUB_OUTPUT"  # yamllint disable-line rule:line-length

      - name: Lint Codebase
        id: super-linter
        uses: super-linter/super-linter/slim@v7
        env:
          DEFAULT_BRANCH: main
          GITHUB_ACTIONS_CONFIG_FILE: .github/linters/actionlint.yml
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .  # Set linter rules directory to repo root
          MARKDOWN_CONFIG_FILE: .github/linters/.markdown-lint.yml
          PYTHONPATH: "/github/workspace:/github/workflow/.venv/lib/python${{ steps.get-python-version.outputs.python-version }}/site-packages"  # yamllint disable-line rule:line-length
          PYTHON_MYPY_CONFIG_FILE: pyproject.toml
          PYTHON_RUFF_CONFIG_FILE: pyproject.toml
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_PYLINT: false
          VALIDATE_JSCPD: false
          VALIDATE_JSON_PRETTIER: false
          VALIDATE_MARKDOWN_PRETTIER: false
          VALIDATE_YAML_PRETTIER: false
          YAML_CONFIG_FILE: .github/linters/.yaml-lint.yml
