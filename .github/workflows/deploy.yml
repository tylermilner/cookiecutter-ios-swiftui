name: Deploy

on:  # yamllint disable-line rule:truthy
  workflow_run:
    workflows: [Test]
    branches: [feature/preserve-artifact-permissions]
    types: [completed]
  workflow_dispatch:

env:
  # Match path used in `make generate` command
  TEMPLATE_OUTPUT_DIR: my-app
  # Match name used in test.yml upload artifact step
  TEMPLATE_OUTPUT_ARTIFACT_NAME: template-output

permissions:
  contents: read

jobs:
  check-for-changes:
    name: Check for template changes
    runs-on: ubuntu-22.04
    if: |
      github.event.workflow_run.conclusion == 'success' ||
      github.event_name == 'workflow_dispatch'
    permissions:
      # Needed so that the workflow run can be cancelled if necessary
      actions: write
    outputs:
      template-files-changed: ${{ steps.check-for-changes.outputs.template-files-changed }}  # yamllint disable-line rule:line-length
    steps:
      - uses: actions/checkout@v4

      - name: Get commit of last successful deployment
        id: last-successful-commit
        uses: tylermilner/last-successful-commit-hash-action@v1
        with:
          github-token: ${{ github.token }}
          workflow-id: deploy.yml
          branch: main

      - name: Check for changes in the template directory
        uses: dorny/paths-filter@v3
        id: check-for-changes
        with:
          base: ${{ steps.last-successful-commit.outputs.commit-hash }}
          filters: |
            template-files-changed:
              - '{{ cookiecutter.project_root }}/**'

      # yamllint disable rule:line-length
      - name: Show check for changes result
        run: |
          echo "Template files changed: ${{ steps.check-for-changes.outputs.template-files-changed }}"
      # yamllint enable rule:line-length

  deploy-generated-template:
    name: Deploy generated template
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout output repository
        uses: actions/checkout@v4
        with:
          repository: 'tylermilner/cookiecutter-ios-swiftui-output'
          ref: 'main'
          token: ${{ secrets.TEMPLATE_OUTPUT_REPO_TOKEN }}

      # yamllint disable rule:line-length
      - name: Get run ID of "Test" workflow
        id: get-run-id
        run: |
          OTHER_REPO="${{ github.repository }}"
          WF_NAME="Test"
          RUN_ID=$(gh run --repo ${OTHER_REPO} list --workflow ${WF_NAME} --json databaseId --jq .[0].databaseId)
          echo "Detected latest run id of ${RUN_ID} for workflow ${WF_NAME}"
          echo "run-id=${RUN_ID}" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
      # yamllint enable rule:line-length

      - name: Download artifact from "Test" workflow
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.TEMPLATE_OUTPUT_ARTIFACT_NAME }}
          github-token: ${{ github.token }}
          repository: ${{ github.repository }}
          run-id: ${{ steps.get-run-id.outputs.run-id }}

      - name: List downloaded files
        run: ls -la

      - name: Extract downloaded artifact
        run: |
          tar -xzvf ${{ env.TEMPLATE_OUTPUT_ARTIFACT_NAME }}.tar.gz
          mv ${{ env.TEMPLATE_OUTPUT_DIR }}/* .

      - name: Clean up extracted artifact
        run: |
          rm ${{ env.TEMPLATE_OUTPUT_ARTIFACT_NAME }}.tar.gz
          rm -rf ${{ env.TEMPLATE_OUTPUT_DIR }}

      - name: List extracted files
        run: ls -la

      - name: Setup git config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "<>"

      # yamllint disable rule:line-length
      - name: Commit and push generated template
        run: |
          export COMMIT_MESSAGE="Generated template from ${{ github.repository }}/${{ github.ref}}@${{ github.sha }}"
          git add .
          git commit -m "$COMMIT_MESSAGE"
          git status
      # yamllint enable rule:line-length
