name: Deploy to Output Repo

on:
  workflow_run:
    workflows: [Test]
    branches: [main]
    types: [completed]
  workflow_dispatch:
    inputs:
      runId:
        description: 'The ID of the "Test" workflow run to deploy'
        required: false

jobs:
  deploy-generated-template:
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout output repository
        uses: actions/checkout@v4
        with:
          repository: 'tylermilner/cookiecutter-ios-swiftui-output'
          ref: 'main'
          token:  ${{ secrets.TEMPLATE_OUTPUT_REPO_TOKEN }}

      - name: Get run ID of "Test" workflow
        id: get-run-id
        run: |
          if [[ -z "$INPUT_RUN_ID" ]]; then
            # Get run ID using the GitHub CLI
            OTHER_REPO="tylermilner/cookiecutter-ios-swiftui"
            WF_NAME="Test"
            RUN_ID=`gh run --repo ${OTHER_REPO} list --workflow ${WF_NAME} --json databaseId --jq .[0].databaseId`
            echo "Detected latest run id of ${RUN_ID} for workflow ${WF_NAME}"
          else
            # Use the run ID provided by the user
            RUN_ID="${INPUT_RUN_ID}"
            echo "Using provided run id: ${RUN_ID}"
          fi
          echo "run-id=${RUN_ID}" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
          INPUT_RUN_ID: ${{ inputs.runId }}

      - name: Download artifact from "Test" workflow
        uses: actions/download-artifact@v4
        with:
          name: template-output # Match name used in test.yml upload artifact step
          github-token: ${{ github.token }}
          repository: ${{ github.repository }}
          run-id: ${{ steps.get-run-id.outputs.run-id }}

      - name: Show downloaded files
        run: ls -la

      - name: Setup git config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "<>"

      - name: Commit and push generated template
        run: |
          export COMMIT_MESSAGE="Generated template from ${{ github.repository }}/${{ github.ref}}@${{ github.sha }}"
          git add .
          git commit -m "$COMMIT_MESSAGE"
          git push
