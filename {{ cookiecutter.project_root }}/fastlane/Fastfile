# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# Fix "xcodebuild -showBuildSettings timed out" error when running on slow machines
ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "120"

default_platform(:ios)

before_all do |lane, options|
  # Make sure fastlane is being executing using 'bundle exec' prefix
  ensure_bundle_exec()
end

platform :ios do
  # Variables available to all lanes
  ci_build_number = ENV["BUILD_NUMBER"] ? ENV["BUILD_NUMBER"] : "1" # Defaults to build number "1"
  build_directory = ENV["BUILD_DIRECTORY"] ? ENV["BUILD_DIRECTORY"] : ".build" # Defaults to ".build" directory for build artifacts
  derived_data_path = "#{build_directory}/DerivedData"
  app_name = "{{ cookiecutter.project_name }}"
  scheme = "{{ cookiecutter.__scheme }}"
  target = "{{ cookiecutter.target_name }}"
  qa_build_type = "adhoc"
  qa_build_configuration = "QA"
  default_test_device = "{{ cookiecutter.simulator_name }}"

  desc "Run tests"
  lane :test do |options|
    # Check for test device override
    device = options[:device] || default_test_device

    # Do clean build and force quit & pre-launch simulator to increase UI test reliability when run on CI
    run_tests(
      derived_data_path: derived_data_path,
      clean: true,
      force_quit_simulator: true,
      prelaunch_simulator: true,
      device: device,
      ensure_devices_found: true
    )
  end

  desc "Create an App ID on the Apple Developer Portal"
  lane :setup_app_id do
    # Create the App ID in the Apple Developer Portal only
    # Assumes FASTLANE_USER and FASTLANE_TEAM_ID are set in the environment (e.g. .env file)
    produce(
      app_name: app_name,
      skip_itc: true
    )
  end

  desc "Create certificates and provisioning profiles"
  lane :setup_certs do
    # Load the API key for App Store Connect using environment values in .env file
    # Assumes APP_STORE_CONNECT_API_KEY_KEY_ID, APP_STORE_CONNECT_API_KEY_ISSUER_ID, and APP_STORE_CONNECT_API_KEY_KEY are set in the environment (e.g. .env file)
    app_store_connect_api_key(
      is_key_content_base64: true
    )

    # Create certificates and provisioning profiles
    # Use is_ci flag to prevent accidentally modifying certs and profiles when running on CI
    # Assumes MATCH_GIT_URL, MATCH_GIT_BASIC_AUTHORIZATION, and MATCH_PASSWORD are set in the environment (e.g. .env file)
    match(
      type: "development",
      readonly: is_ci
    )
    match(
      type: "adhoc",
      readonly: is_ci
    )
    match(
      type: "appstore",
      readonly: is_ci
    )
  end
end
